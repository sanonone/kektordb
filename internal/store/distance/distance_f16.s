// Code generated by command: go run main.go -stubs ./stubs_f16.go -out ./distance_f16.s. DO NOT EDIT.

#include "textflag.h"

// func SquaredEuclideanFloat16AVX2(v1 []uint16, v2 []uint16) float32
// Requires: AVX, F16C, FMA3, SSE, SSE2
TEXT Â·SquaredEuclideanFloat16AVX2(SB), NOSPLIT, $0-52
	MOVQ   v1_base+0(FP), AX
	MOVQ   v2_base+24(FP), CX
	MOVQ   v1_len+8(FP), DX
	VXORPS Y0, Y0, Y0

loop_euclidean_f16:
	CMPQ        DX, $0x08
	JL          remainder_euclidean_f16
	VMOVDQU     (AX), X1
	VMOVDQU     (CX), X2
	VCVTPH2PS   X1, Y1
	VCVTPH2PS   X2, Y2
	VSUBPS      Y2, Y1, Y1
	VFMADD231PS Y1, Y1, Y0
	ADDQ        $0x10, AX
	ADDQ        $0x10, CX
	SUBQ        $0x08, DX
	JMP         loop_euclidean_f16

remainder_euclidean_f16:
	CMPQ        DX, $0x00
	JE          done_euclidean_f16
	PINSRW      $0x00, (AX), X3
	PINSRW      $0x00, (CX), X4
	VCVTPH2PS   X3, X1
	VCVTPH2PS   X4, X2
	VSUBSS      X2, X1, X1
	VXORPS      X5, X5, X5
	VFMADD231SS X1, X1, X5
	VMOVDQU     Y5, Y1
	VADDPS      Y1, Y0, Y0
	ADDQ        $0x02, AX
	ADDQ        $0x02, CX
	SUBQ        $0x01, DX
	JMP         remainder_euclidean_f16

done_euclidean_f16:
	VEXTRACTF128 $0x01, Y0, X3
	VADDPS       Y0, Y3, Y0
	VSHUFPS      $0xee, Y0, Y0, Y1
	VADDPS       Y1, Y0, Y0
	VSHUFPS      $0x55, Y0, Y0, Y1
	VADDPS       Y1, Y0, Y0
	VMOVAPS      X0, X0
	MOVSS        X0, ret+48(FP)
	RET
